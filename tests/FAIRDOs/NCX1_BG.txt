def model NCX1_BG as
    def import using "./units.cellml" for
        unit fmol_per_s using unit fmol_per_s;
        unit per_fmol using unit per_fmol;
        unit J_per_mol using unit J_per_mol;
        unit J_per_K_mol using unit J_per_K_mol;
        unit fmol using unit fmol;
    enddef;
    def import using "params_BG_NCX1.cellml" for
        comp params_BG_NCX1 using comp params_BG_NCX1;
    enddef;
    def comp NCX1_BG as
        var t: second;
        var R: J_per_K_mol{ pub: in};
        var T: kelvin{ pub: in};
        var K_EoCao: per_fmol{ pub: in};
        var q_init_EoCao: fmol{ pub: in};
        var K_Eo: per_fmol{ pub: in};
        var q_init_Eo: fmol{ pub: in};
        var K_EoNao: per_fmol{ pub: in};
        var q_init_EoNao: fmol{ pub: in};
        var K_EiNai: per_fmol{ pub: in};
        var q_init_EiNai: fmol{ pub: in};
        var K_Ei: per_fmol{ pub: in};
        var q_init_Ei: fmol{ pub: in};
        var K_EiCai: per_fmol{ pub: in};
        var q_init_EiCai: fmol{ pub: in};
        var K_Cao: per_fmol{ pub: in};
        var q_init_Cao: fmol{ pub: in};
        var K_Nao: per_fmol{ pub: in};
        var q_init_Nao: fmol{ pub: in};
        var K_Cai: per_fmol{ pub: in};
        var q_init_Cai: fmol{ pub: in};
        var K_Nai: per_fmol{ pub: in};
        var q_init_Nai: fmol{ pub: in};
        var kappa_re1: fmol_per_s{ pub: in};
        var kappa_re2: fmol_per_s{ pub: in};
        var kappa_re3: fmol_per_s{ pub: in};
        var kappa_re4: fmol_per_s{ pub: in};
        var kappa_re5: fmol_per_s{ pub: in};
        var kappa_re6: fmol_per_s{ pub: in};
        var mu_EoCao: J_per_mol;
        var v_EoCao: fmol_per_s;
        var mu_Eo: J_per_mol;
        var v_Eo: fmol_per_s;
        var mu_EoNao: J_per_mol;
        var v_EoNao: fmol_per_s;
        var mu_EiNai: J_per_mol;
        var v_EiNai: fmol_per_s;
        var mu_Ei: J_per_mol;
        var v_Ei: fmol_per_s;
        var mu_EiCai: J_per_mol;
        var v_EiCai: fmol_per_s;
        var mu_Cao: J_per_mol;
        var v_Cao: fmol_per_s;
        var mu_Nao: J_per_mol;
        var v_Nao: fmol_per_s;
        var mu_Cai: J_per_mol;
        var v_Cai: fmol_per_s;
        var mu_Nai: J_per_mol;
        var v_Nai: fmol_per_s;
        var A_f_re1: J_per_mol;
        var v_re1: fmol_per_s;
        var A_r_re1: J_per_mol;
        var A_f_re2: J_per_mol;
        var v_re2: fmol_per_s;
        var A_r_re2: J_per_mol;
        var A_f_re3: J_per_mol;
        var v_re3: fmol_per_s;
        var A_r_re3: J_per_mol;
        var A_f_re4: J_per_mol;
        var v_re4: fmol_per_s;
        var A_r_re4: J_per_mol;
        var A_f_re5: J_per_mol;
        var v_re5: fmol_per_s;
        var A_r_re5: J_per_mol;
        var A_f_re6: J_per_mol;
        var v_re6: fmol_per_s;
        var A_r_re6: J_per_mol;
        var q_EoCao: fmol{ init: q_init_EoCao};
        var q_Eo: fmol{ init: q_init_Eo};
        var q_EoNao: fmol{ init: q_init_EoNao};
        var q_EiNai: fmol{ init: q_init_EiNai};
        var q_Ei: fmol{ init: q_init_Ei};
        var q_EiCai: fmol{ init: q_init_EiCai};
        var q_Cao: fmol{ init: q_init_Cao};
        var q_Nao: fmol{ init: q_init_Nao};
        var q_Cai: fmol{ init: q_init_Cai};
        var q_Nai: fmol{ init: q_init_Nai};
        mu_EoCao = R*T*ln(K_EoCao*q_EoCao);
        ode(q_EoCao,t) = v_EoCao;
        mu_Eo = R*T*ln(K_Eo*q_Eo);
        ode(q_Eo,t) = v_Eo;
        mu_EoNao = R*T*ln(K_EoNao*q_EoNao);
        ode(q_EoNao,t) = v_EoNao;
        mu_EiNai = R*T*ln(K_EiNai*q_EiNai);
        ode(q_EiNai,t) = v_EiNai;
        mu_Ei = R*T*ln(K_Ei*q_Ei);
        ode(q_Ei,t) = v_Ei;
        mu_EiCai = R*T*ln(K_EiCai*q_EiCai);
        ode(q_EiCai,t) = v_EiCai;
        mu_Cao = R*T*ln(K_Cao*q_Cao);
        ode(q_Cao,t) = v_Cao;
        mu_Nao = R*T*ln(K_Nao*q_Nao);
        ode(q_Nao,t) = v_Nao;
        mu_Cai = R*T*ln(K_Cai*q_Cai);
        ode(q_Cai,t) = v_Cai;
        mu_Nai = R*T*ln(K_Nai*q_Nai);
        ode(q_Nai,t) = v_Nai;
        v_re1 = kappa_re1*(exp(A_f_re1/(R*T)) - exp(A_r_re1/(R*T)));
        v_re2 = kappa_re2*(exp(A_f_re2/(R*T)) - exp(A_r_re2/(R*T)));
        v_re3 = kappa_re3*(exp(A_f_re3/(R*T)) - exp(A_r_re3/(R*T)));
        v_re4 = kappa_re4*(exp(A_f_re4/(R*T)) - exp(A_r_re4/(R*T)));
        v_re5 = kappa_re5*(exp(A_f_re5/(R*T)) - exp(A_r_re5/(R*T)));
        v_re6 = kappa_re6*(exp(A_f_re6/(R*T)) - exp(A_r_re6/(R*T)));
        v_EoCao = -v_re1;
        v_Eo = v_re1 -v_re3;
        v_EoNao = v_re3 -v_re5 +v_re6;
        v_EiNai = -v_re4 +v_re5;
        v_Ei = -v_re2 +v_re4;
        v_EiCai = v_re2 -v_re6;
        v_Cao = v_re1;
        v_Nao = -3{dimensionless}*v_re3;
        v_Cai = -v_re2;
        v_Nai = 3{dimensionless}*v_re4;
        A_f_re1 = mu_EoCao;
        A_r_re1 = mu_Eo +mu_Cao;
        A_f_re2 = mu_Ei +mu_Cai;
        A_r_re2 = mu_EiCai;
        A_f_re3 = mu_Eo +3{dimensionless}*mu_Nao;
        A_r_re3 = mu_EoNao;
        A_f_re4 = mu_EiNai;
        A_r_re4 = mu_Ei +3{dimensionless}*mu_Nai;
        A_f_re5 = mu_EoNao;
        A_r_re5 = mu_EiNai;
        A_f_re6 = mu_EiCai;
        A_r_re6 = mu_EoNao;
    enddef;
    def map between params_BG_NCX1 and NCX1_BG for
        vars R and R;
        vars T and T;
        vars K_EoCao and K_EoCao;
        vars q_init_EoCao and q_init_EoCao;
        vars K_Eo and K_Eo;
        vars q_init_Eo and q_init_Eo;
        vars K_EoNao and K_EoNao;
        vars q_init_EoNao and q_init_EoNao;
        vars K_EiNai and K_EiNai;
        vars q_init_EiNai and q_init_EiNai;
        vars K_Ei and K_Ei;
        vars q_init_Ei and q_init_Ei;
        vars K_EiCai and K_EiCai;
        vars q_init_EiCai and q_init_EiCai;
        vars K_Cao and K_Cao;
        vars q_init_Cao and q_init_Cao;
        vars K_Nao and K_Nao;
        vars q_init_Nao and q_init_Nao;
        vars K_Cai and K_Cai;
        vars q_init_Cai and q_init_Cai;
        vars K_Nai and K_Nai;
        vars q_init_Nai and q_init_Nai;
        vars kappa_re1 and kappa_re1;
        vars kappa_re2 and kappa_re2;
        vars kappa_re3 and kappa_re3;
        vars kappa_re4 and kappa_re4;
        vars kappa_re5 and kappa_re5;
        vars kappa_re6 and kappa_re6;
    enddef;
enddef;
