def model NMDA_BG as
    def import using "./units.cellml" for
        unit per_fmol using unit per_fmol;
        unit J_per_K_mol using unit J_per_K_mol;
        unit fmol using unit fmol;
        unit J_per_mol using unit J_per_mol;
        unit fmol_per_s using unit fmol_per_s;
    enddef;
    def import using "params_BG_NMDA_3.cellml" for
        comp params_BG_NMDA_3 using comp params_BG_NMDA_3;
    enddef;
    def comp NMDA_BG as
        var t: second;
        var R: J_per_K_mol{ pub: in};
        var T: kelvin{ pub: in};
        var K_C_g: per_fmol{ pub: in};
        var q_init_C_g: fmol{ pub: in};
        var K_CA_g: per_fmol{ pub: in};
        var q_init_CA_g: fmol{ pub: in};
        var K_CAA_g: per_fmol{ pub: in};
        var q_init_CAA_g: fmol{ pub: in};
        var K_CH_g: per_fmol{ pub: in};
        var q_init_CH_g: fmol{ pub: in};
        var K_CAH_g: per_fmol{ pub: in};
        var q_init_CAH_g: fmol{ pub: in};
        var K_CAAH_g: per_fmol{ pub: in};
        var q_init_CAAH_g: fmol{ pub: in};
        var K_H1: per_fmol{ pub: in};
        var q_init_H1: fmol{ pub: in};
        var K_H2: per_fmol{ pub: in};
        var q_init_H2: fmol{ pub: in};
        var K_H3: per_fmol{ pub: in};
        var q_init_H3: fmol{ pub: in};
        var K_open_g: per_fmol{ pub: in};
        var q_init_open_g: fmol{ pub: in};
        var kappa_re1: fmol_per_s{ pub: in};
        var kappa_re2: fmol_per_s{ pub: in};
        var kappa_re3: fmol_per_s{ pub: in};
        var kappa_re4: fmol_per_s{ pub: in};
        var kappa_re5: fmol_per_s{ pub: in};
        var kappa_re6: fmol_per_s{ pub: in};
        var kappa_re7: fmol_per_s{ pub: in};
        var kappa_re8: fmol_per_s{ pub: in};
        var mu_C_g: J_per_mol;
        var v_C_g: fmol_per_s;
        var mu_CA_g: J_per_mol;
        var v_CA_g: fmol_per_s;
        var mu_CAA_g: J_per_mol;
        var v_CAA_g: fmol_per_s;
        var mu_CH_g: J_per_mol;
        var v_CH_g: fmol_per_s;
        var mu_CAH_g: J_per_mol;
        var v_CAH_g: fmol_per_s;
        var mu_CAAH_g: J_per_mol;
        var v_CAAH_g: fmol_per_s;
        var mu_H1: J_per_mol;
        var v_H1: fmol_per_s;
        var mu_H2: J_per_mol;
        var v_H2: fmol_per_s;
        var mu_H3: J_per_mol;
        var v_H3: fmol_per_s;
        var mu_open_g: J_per_mol;
        var v_open_g: fmol_per_s;
        var A_f_re1: J_per_mol;
        var v_re1: fmol_per_s;
        var A_r_re1: J_per_mol;
        var A_f_re2: J_per_mol;
        var v_re2: fmol_per_s;
        var A_r_re2: J_per_mol;
        var A_f_re3: J_per_mol;
        var v_re3: fmol_per_s;
        var A_r_re3: J_per_mol;
        var A_f_re4: J_per_mol;
        var v_re4: fmol_per_s;
        var A_r_re4: J_per_mol;
        var A_f_re5: J_per_mol;
        var v_re5: fmol_per_s;
        var A_r_re5: J_per_mol;
        var A_f_re6: J_per_mol;
        var v_re6: fmol_per_s;
        var A_r_re6: J_per_mol;
        var A_f_re7: J_per_mol;
        var v_re7: fmol_per_s;
        var A_r_re7: J_per_mol;
        var A_f_re8: J_per_mol;
        var v_re8: fmol_per_s;
        var A_r_re8: J_per_mol;
        var q_C_g: fmol{ init: q_init_C_g};
        var q_CA_g: fmol{ init: q_init_CA_g};
        var q_CAA_g: fmol{ init: q_init_CAA_g};
        var q_CH_g: fmol{ init: q_init_CH_g};
        var q_CAH_g: fmol{ init: q_init_CAH_g};
        var q_CAAH_g: fmol{ init: q_init_CAAH_g};
        var q_H1: fmol{ init: q_init_H1};
        var q_H2: fmol{ init: q_init_H2};
        var q_H3: fmol{ init: q_init_H3};
        var q_open_g: fmol{ init: q_init_open_g};
        mu_C_g = R*T*ln(K_C_g*q_C_g);
        ode(q_C_g,t) = v_C_g;
        mu_CA_g = R*T*ln(K_CA_g*q_CA_g);
        ode(q_CA_g,t) = v_CA_g;
        mu_CAA_g = R*T*ln(K_CAA_g*q_CAA_g);
        ode(q_CAA_g,t) = v_CAA_g;
        mu_CH_g = R*T*ln(K_CH_g*q_CH_g);
        ode(q_CH_g,t) = v_CH_g;
        mu_CAH_g = R*T*ln(K_CAH_g*q_CAH_g);
        ode(q_CAH_g,t) = v_CAH_g;
        mu_CAAH_g = R*T*ln(K_CAAH_g*q_CAAH_g);
        ode(q_CAAH_g,t) = v_CAAH_g;
        mu_H1 = R*T*ln(K_H1*q_H1);
        ode(q_H1,t) = v_H1;
        mu_H2 = R*T*ln(K_H2*q_H2);
        ode(q_H2,t) = v_H2;
        mu_H3 = R*T*ln(K_H3*q_H3);
        ode(q_H3,t) = v_H3;
        mu_open_g = R*T*ln(K_open_g*q_open_g);
        ode(q_open_g,t) = v_open_g;
        v_re1 = kappa_re1*(exp(A_f_re1/(R*T)) - exp(A_r_re1/(R*T)));
        v_re2 = kappa_re2*(exp(A_f_re2/(R*T)) - exp(A_r_re2/(R*T)));
        v_re3 = kappa_re3*(exp(A_f_re3/(R*T)) - exp(A_r_re3/(R*T)));
        v_re4 = kappa_re4*(exp(A_f_re4/(R*T)) - exp(A_r_re4/(R*T)));
        v_re5 = kappa_re5*(exp(A_f_re5/(R*T)) - exp(A_r_re5/(R*T)));
        v_re6 = kappa_re6*(exp(A_f_re6/(R*T)) - exp(A_r_re6/(R*T)));
        v_re7 = kappa_re7*(exp(A_f_re7/(R*T)) - exp(A_r_re7/(R*T)));
        v_re8 = kappa_re8*(exp(A_f_re8/(R*T)) - exp(A_r_re8/(R*T)));
        v_C_g = -v_re1 -v_re3;
        v_CA_g = v_re1 -v_re2 -v_re4;
        v_CAA_g = v_re2 -v_re5 -v_re8;
        v_CH_g = v_re3 -v_re6;
        v_CAH_g = v_re4 +v_re6 -v_re7;
        v_CAAH_g = v_re5 +v_re7;
        v_H1 = -v_re3;
        v_H2 = -v_re4;
        v_H3 = -v_re5;
        v_open_g = v_re8;
        A_f_re1 = mu_C_g;
        A_r_re1 = mu_CA_g;
        A_f_re2 = mu_CA_g;
        A_r_re2 = mu_CAA_g;
        A_f_re3 = mu_C_g +mu_H1;
        A_r_re3 = mu_CH_g;
        A_f_re4 = mu_CA_g +mu_H2;
        A_r_re4 = mu_CAH_g;
        A_f_re5 = mu_CAA_g +mu_H3;
        A_r_re5 = mu_CAAH_g;
        A_f_re6 = mu_CH_g;
        A_r_re6 = mu_CAH_g;
        A_f_re7 = mu_CAH_g;
        A_r_re7 = mu_CAAH_g;
        A_f_re8 = mu_CAA_g;
        A_r_re8 = mu_open_g;
    enddef;
    def map between params_BG_NMDA_3 and NMDA_BG for
        vars R and R;
        vars T and T;
        vars K_C_g and K_C_g;
        vars q_init_C_g and q_init_C_g;
        vars K_CA_g and K_CA_g;
        vars q_init_CA_g and q_init_CA_g;
        vars K_CAA_g and K_CAA_g;
        vars q_init_CAA_g and q_init_CAA_g;
        vars K_CH_g and K_CH_g;
        vars q_init_CH_g and q_init_CH_g;
        vars K_CAH_g and K_CAH_g;
        vars q_init_CAH_g and q_init_CAH_g;
        vars K_CAAH_g and K_CAAH_g;
        vars q_init_CAAH_g and q_init_CAAH_g;
        vars K_H1 and K_H1;
        vars q_init_H1 and q_init_H1;
        vars K_H2 and K_H2;
        vars q_init_H2 and q_init_H2;
        vars K_H3 and K_H3;
        vars q_init_H3 and q_init_H3;
        vars K_open_g and K_open_g;
        vars q_init_open_g and q_init_open_g;
        vars kappa_re1 and kappa_re1;
        vars kappa_re2 and kappa_re2;
        vars kappa_re3 and kappa_re3;
        vars kappa_re4 and kappa_re4;
        vars kappa_re5 and kappa_re5;
        vars kappa_re6 and kappa_re6;
        vars kappa_re7 and kappa_re7;
        vars kappa_re8 and kappa_re8;
    enddef;
enddef;
